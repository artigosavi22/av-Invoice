// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model av_branches_t {
  branch_id      Int             @id @default(autoincrement())
  branch_name    String
  branch_logo    String
  branch_url     String
  branch_address String
  branch_status  Boolean
  created_by     Int
  created_date   DateTime        @default(now())
  av_user_t      av_user_t[]
  av_user_types  av_user_types[]
}

model av_user_types {
  user_type_id  Int           @id @default(autoincrement())
  user_type     String        @unique
  branch_id     Int
  av_branches_t av_branches_t @relation(fields: [branch_id], references: [branch_id])
  av_user_t     av_user_t[]
}

model av_user_t {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  first_name    String
  last_name     String
  mobile        String        @unique
  password      String
  branch_id     Int
  user_type_id  Int
  created_date  DateTime      @default(now())
  created_by    Int
  modified_by   Int
  modified_date DateTime
  av_branches_t av_branches_t @relation(fields: [branch_id], references: [branch_id])
  user_type     av_user_types @relation(fields: [user_type_id], references: [user_type_id])
}

// model Invoice {
//   id          Int        @id @default(autoincrement())
//   number      String     @unique
//   description String?
//   amount      Float
//   status      InvoiceStatus
//   createdAt   DateTime   @default(now())
//   updatedAt   DateTime   @updatedAt
//   createdBy   User       @relation(fields: [createdById], references: [id])
//   createdById Int
//   items       InvoiceItem[]
// }

// model InvoiceItem {
//   id          Int      @id @default(autoincrement())
//   description String
//   quantity    Int
//   unitPrice   Float
//   invoice     Invoice  @relation(fields: [invoiceId], references: [id])
//   invoiceId   Int
// }

// enum InvoiceStatus {
//   DRAFT
//   PENDING
//   PAID
//   CANCELLED
// }

// model Permission {
//   id    Int      @id @default(autoincrement())
//   name  String   @unique
//   roles Role[]   @relation(references: [id])
// }
